# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "indaco"
repo = "md2audio"

[changelog]
# A Tera template to be rendered as the changelog's header.
# See https://keats.github.io/tera/docs/#introduction
header = ""
# A Tera template to be rendered as the changelog's footer.
# See https://keats.github.io/tera/docs/#introduction
footer = ""
# Remove leading and trailing whitespaces from the changelog's body.
trim = true

# A Tera template to be rendered for each release in the changelog.
# See https://keats.github.io/tera/docs/#introduction
body = """
{%- if version -%}
    ## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%Y-%m-%d") }}{% raw %}\n\n{% endraw -%}
{%- else -%}
    ## [Unreleased]{% raw %}\n\n{% endraw -%}
{%- endif -%}


{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        - **{{commit.scope}}:** {{ commit.message | upper_first }}
        {%- if commit.breaking %}
        {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
        {%- endif -%}
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if commit.scope -%}
        {% else -%}
            - {{ commit.message | upper_first }}
            {% if commit.breaking -%}
            {% raw %}  {% endraw %}- **BREAKING**: {{commit.breaking_description}}
            {% endif -%}
        {% endif -%}
    {% endfor -%}
    {% raw %}\n{% endraw %}\
{% endfor %}\n

{%- if github -%}
  {%- if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 -%}
    ### ❤️ New Contributors{% raw %}\n\n{% endraw -%}
    {%- for contributor in github.contributors | filter(attribute="is_first_time", value=true) -%}
      * @{{ contributor.username }} made their first contribution\
        {%- if contributor.pr_number %} in [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) {%- endif -%}
        {% raw %}\n{% endraw -%}
    {%- endfor -%}
    {% raw %}\n{% endraw -%}
  {%- endif -%}
{%- endif -%}
"""

[git]
# Parse commits according to the conventional commits specification.
# See https://www.conventionalcommits.org
conventional_commits = true
# Exclude commits that do not match the conventional commits specification.
filter_unconventional = true
# Exclude commits that are not matched by any commit parser.
filter_commits = false
# Order releases topologically instead of chronologically.
topo_order = false
# Order of commits in each group/release within the changelog.
# Allowed values: newest, oldest
sort_commits = "oldest"
# regex for parsing and grouping commits
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->🚀 Enhancements" },
  { message = "^fix", group = "<!-- 1 -->🩹 Fixes" },
  { message = "^refactor", group = "<!-- 2 -->💅 Refactor" },
  { message = "^doc", group = "<!-- 3 -->📖 Documentation" },
  { message = "^perf", group = "<!-- 4 -->⚡ Performance" },
  { message = "^style", group = "<!-- 5 -->🎨 Styling" },
  { message = "^test", group = "<!-- 6 -->✅ Testing" },
  { message = "^chore", group = "<!-- 7 -->🏡 Chore" },
  { message = "^ci", group = "<!-- 8 -->🤖 CI" },
  { body = ".*security", group = "<!-- 9 -->🛡️ Security" },
  { message = "^revert", group = "<!-- 10 -->◀️ Revert" },
  { message = "^build", group = "<!-- 11 -->📦 Build" },
  { message = ".*", group = "<!-- 12 -->💼 Other" },
  { message = "^release", skip = true },
]
